#/*++
#
#  Copyright 2004, Intel Corporation                                                         
#  All rights reserved. This program and the accompanying materials                          
#  are licensed and made available under the terms and conditions of the BSD License         
#  which accompanies this distribution.  The full text of the license may be found at        
#  http://opensource.org/licenses/bsd-license.php                                            
#                                                                                            
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,                     
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.             
#  
#  Module Name:
#  
#    Makefile
#  
#  Abstract:
#   
#    This makefile is used to build the IPF build tip.
#   
#--*/

#
# Everything depends on EDK_SOURCE & EDK_TOOLS_PATH. Make sure it's defined
#
!IFNDEF EDK_SOURCE
!ERROR EDK_SOURCE environmental variable not set 
!ENDIF

EFI_SOURCE = $(EDK_SOURCE)

!IFNDEF EDK_TOOLS_PATH
!MESSAGE EDK_TOOLS_PATH environmental variable not set, default setting used
!ENDIF

!INCLUDE PlatformTools.env

#
# Target to build customer config
#
all : tempstamp_file build_tools oem_tool_path vc_check makefiles builds

#
# Create a file to store the date and time, and used by SetStamp.exe
#
tempstamp_file:
!IF DEFINED(DATE_STAMP) && DEFINED(TIME_STAMP)
  @echo $(DATE_STAMP) $(TIME_STAMP) > GenStamp.txt
!ELSEIF EXIST(GenStamp.txt)
  - @del GenStamp.txt
!ENDIF

#
# Make all the EFI build tools by calling the makefile
#
build_tools :
  $(MAKE) -f $(EDK_TOOLS_SOURCE)\makefile PROCESSOR=$(PROCESSOR)

#
# Set path for oem signing tools that would be dispatched by GenFfsFile utility
#
oem_tool_path: 
  set OEMTOOLPATH=$(EDK_TOOLS_OUTPUT)

#
# Check VC version. VC compiler (VC6.0 SP4, SP5) will lost some codes
# in /O1 option. 
#
vc_check:
  $(EDK_TOOLS_OUTPUT)\VcCheck.exe

#
# Run the utility that processes our description files and generates the
# makefiles. Specify -v option for more verbose output.
# Specify "-xref filename" to generate a cross-reference file of 
# basename-to-fileguid that can be used by VolInfo
#
makefiles : $(PROCESSOR)\Blank.pad
#
# Create the complete customer DSC file from the common and platform parts.
#
  $(PROCESSDSC)                                \
    -d EFI_SOURCE=$(EFI_SOURCE)                \
    -d EDK_SOURCE=$(EDK_SOURCE)                \
    -d PROCESSOR=$(PROCESSOR)                  \
    -d PROJECT_NAME=$(PROJECT_NAME)            \
    -g $(EDK_TOOLS_OUTPUT)\GuidDatabase.txt  \
    $(PROJECT_NAME).dsc


#
# Call all the makefiles that were generated by ProcessDsc. ProcessDsc
# creates the makefile.out that calls all the component makefiles.
#
builds :
  $(MAKE) -f makefile.out libraries
  $(MAKE) -f makefile.out components

#
# Copy blank pad section file the bin directory
#

$(PROCESSOR)\Blank.pad : Blank.pad
  if not exist $(PROCESSOR) md $(PROCESSOR)
  copy $** $@
  

#
# Create a target to clean up all build directories
#
clean :
  - @if exist vc??.* del vc??.* > NUL
  - @if exist *.bak del *.bak > NUL
  - @if exist $(PROCESSOR) rd /s /q $(PROCESSOR) > NUL
  - @if exist ebc rd /s /q ebc > NUL
  - @if exist fv rd /s /q fv > NUL
  - @if exist Tools rd /s /q Tools > NUL
  - @if exist makefile.out del makefile.out > NUL
  - @echo All targets cleaned

#
# Clean up only the tools
#
cleantools :
  - @if exist Tools rd /s /q Tools > NUL
