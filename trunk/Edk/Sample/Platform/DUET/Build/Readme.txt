Developer's UEFI Emulation (DUET)

Build DUET image
=====================
1. Tools preparation

To build DUET image, following tools are required:

  1). *Visual Studio 2003* or *Visual Studio 2005*
      Assume installed at <VS_PATH>, 
      e.g.: C:\Program Files\Microsoft Visual Studio .NET 2003\.
  2). WinDDK
      Assume installed at <WIN_DDK_PATH>, e.g.: C:\WINDDK\3790.1830\.
  3). MASM
      Assume installed at <MASMPATH>, e.g.: C:\Masm611\.

2. Build steps

2.1. [Visual Studio 2003]

  1). Run "cmd.exe" to open a command line window.
  2). Run "vsvars32.bat" in command line to set *Visual Studio* environment 
      variable. In default vsvars32.bat is under 
      C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\Tools\.
  3). Set other environment variable by running following commands:
        set EDK_SOURCE=<EdkRoot>
        set WIN_DDK_PATH=<WIN_DDK_PATH>
        set MASMPATH=<MASMPATH>
      Where, <EdkRoot> is where Edk root directory puts, e.g.: C:\MyProjects\Edk\.
      In the meanwhile DUET should be under C:\MyProjects\Edk\Sample\Platform\.
  4). Change current directory to <EdkRoot>\Sample\Platform\DUET
  5). Run "nmake <target>" to build specified image, where <target> can be one 
      of the four values: efi32, uefi32, efi64, uefi64.

2.2. [Visual Studio 2005]

  Two changes based on the step using *Visual Studio 2003* need to make:
  1). In step 2), default location of vcvars32.bat is 
      "C:\Program Files\Microsoft Visual Studio 8\VC\bin".
  2). Before running "nmake <target>", open 
      <EdkRoot>\Sample\Platform\DUET\Config.env. Replace the line "USE_VC8 = NO"
      with "USE_VC8 = YES".

3. Clean steps

In command line, under <EdkRoot>\Sample\Platform\DUET:

Running "nmake <target>clean" can remove all files generated by corresponding 
"nmake <target>".
E.g.: "nmake efi32clean" can remove all files generated by "nmake efi32".

Running "nmake clean" can remove all files generated by any "nmake <target>" 
command, which is equivalent to running 
"nmake efi32clean & nmake uefi32clean & nmake efi64clean & nmake uefi64clean".

Create bootable disk
======================
After the <target> image builds successfully by the command "nmake <target>". 
Keep the command line window open and change current directory to <target> 
directory, e.g.: cd <EdkRoot>\Sample\Platform\DUET\efi32.

Following steps can let us create DUET bootable disk for corresponding storage 
media.

1. Floppy
  1). Set EFI_BOOT_DISK environment variable by running following command:
        set EFI_BOOT_DISK=<FLOPPY>:
      Where <FLOPPY> is the floppy volume, e.g.: set EFI_BOOT_DISK=A:. 
      Please don¡¯t forget to append a *COLON* after the volume letter.
  2). Run command "nmake createfloppy & nmake floppy", which will create the
      bootable floppy disk.

2. USB disk
  1). Set EFI_BOOT_DISK environment variable by running following command:
        set EFI_BOOT_DISK=<UD>:
      Where <UD> is the USB disk volume, e.g.: set EFI_BOOT_DISK=H:.
      Please don¡¯t forget to append a *COLON* after the volume letter.
  2). Run command "nmake createusb" and *RE-PLUG* the USB disk after that.
      Then run command "nmake usb". The two commands will create the bootable
      USB disk.

  The bootable USB disk can also be created by "nmake createusb32" and "nmake
  usb32", which will create the disk with Fat32 type instead of Fat16.
  Please *DO NOT* forget to *RE-PLUG* the USB disk between the two commands.

Overview of DUET bootflow
==========================
Here <FAT> means the partition type of volume: FAT12, FAT16, FAT32; <Platform>
means the type of platform: IA32, X64
1. Legacy boot:
  Load Boot Sector<FAT>
  Jump to it.
2. Boot Sector<FAT>:
  Load Start<Platform>
  Jump to it.
3. Start<Platform> (real mode):
  Eflldr is loaded into memory
  Prepare E820 table
  Load GDT, IDT, Page Table(for X64), 
  Enter 32bits protect mode, or 64bits long mode
  Jump to Efi<Platform>
4. Efi<Platform>:
  Prepare stack
  Install Interrupt Handler
  Relocate Efildr to low memory
  Jump to Efildr
5. Efildr
  Get E820 memory
  Load BFV, relocate DxeCore, relocate DxeIpl, jump to DxeIpl
6. DxeIpl
  Generate Hob
  Prepare PPI needed by DXE
  Get DxeCore entry point, jump to it
